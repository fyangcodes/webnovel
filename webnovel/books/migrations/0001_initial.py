# Generated by Django 5.2.2 on 2025-06-25 18:26

import books.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("canonical_name", models.CharField(max_length=255)),
                ("localized_name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("name", models.CharField(max_length=50)),
                ("local_name", models.CharField(max_length=50)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("isbn", models.CharField(blank=True, max_length=20, null=True)),
                ("description", models.TextField(blank=True)),
                (
                    "cover_image",
                    models.ImageField(blank=True, null=True, upload_to="book_covers/"),
                ),
                (
                    "status",
                    models.CharField(
                        default="draft",
                        help_text="Book status (e.g., draft, published, etc.)",
                        max_length=20,
                    ),
                ),
                ("total_chapters", models.PositiveIntegerField(default=0)),
                ("estimated_words", models.PositiveIntegerField(default=0)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="books.author",
                    ),
                ),
                (
                    "original_book",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to the original book if this is a translation.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="translations",
                        to="books.book",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="books",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="books.language",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BookFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "file",
                    models.FileField(
                        upload_to=books.models.book_file_upload_to,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf", "txt", "docx", "epub"]
                            )
                        ],
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255)),
                ("file_size", models.PositiveIntegerField(default=0)),
                ("file_hash", models.CharField(blank=True, max_length=64)),
                ("file_type", models.CharField(blank=True, max_length=20)),
                ("processing_progress", models.PositiveIntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("processing_started_at", models.DateTimeField(blank=True, null=True)),
                (
                    "processing_completed_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="files",
                        to="books.book",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who uploaded this file.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="uploaded_bookfiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChangeLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("original_object_id", models.PositiveIntegerField()),
                ("changed_object_id", models.PositiveIntegerField()),
                (
                    "change_type",
                    models.CharField(
                        choices=[
                            ("translation", "Translation"),
                            ("edit", "Edit/Correction"),
                            ("other", "Other"),
                        ],
                        default="edit",
                        max_length=20,
                    ),
                ),
                ("status", models.CharField(default="completed", max_length=50)),
                ("notes", models.TextField(blank=True)),
                ("version", models.PositiveIntegerField(default=1)),
                (
                    "diff",
                    models.TextField(
                        blank=True, help_text="Optional: store a diff of the change"
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who made the change (translator, editor, etc.)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="author",
            name="language",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="books.language",
            ),
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("chapter_number", models.PositiveIntegerField()),
                ("excerpt", models.TextField(blank=True, max_length=1000)),
                (
                    "abstract",
                    models.TextField(
                        blank=True,
                        help_text="AI-generated summary for translation context",
                    ),
                ),
                (
                    "key_terms",
                    models.JSONField(
                        default=list,
                        help_text="Important terms for consistent translation",
                    ),
                ),
                ("word_count", models.PositiveIntegerField(default=0)),
                ("char_count", models.PositiveIntegerField(default=0)),
                ("active_at", models.DateTimeField(blank=True, null=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="books.book",
                    ),
                ),
                (
                    "original_chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="translations",
                        to="books.chapter",
                    ),
                ),
            ],
            options={
                "ordering": ["chapter_number"],
                "indexes": [
                    models.Index(
                        fields=["book", "chapter_number"],
                        name="books_chapt_book_id_de56cf_idx",
                    )
                ],
                "unique_together": {("book", "chapter_number")},
            },
        ),
        migrations.AddIndex(
            model_name="book",
            index=models.Index(
                fields=["owner", "status"], name="books_book_owner_i_3f6702_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="book",
            index=models.Index(
                fields=["created_at"], name="books_book_created_572b47_idx"
            ),
        ),
    ]
